# Rebind C-a to be the default command sequence
set -g prefix C-a
unbind-key C-b

# reload the .tmux.conf file with Ctrl-r
bind C-r source-file ~/.tmux.conf \; display-message "configuration reloaded"

# act like vim
setw -g mode-keys vi
# pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

unbind n
unbind p
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# enable vim controls for tmux >=v2.4
if-shell -b '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.4" | bc) -eq 1 ]' '\
  bind -T copy-mode-vi "v" send -X begin-selection; \
  bind -T copy-mode-vi "V" send -X rectangle-toggle; \
  bind -T copy-mode-vi "y" send -X copy-selection-and-cancel; \
  ' '\
  bind -t vi-copy "v" begin-selection; \
  bind -t vi-copy "V" rectangle-toggle; \
  bind -t vi-copy "y" copy-selection; \
  '

# enable mouse control
if-shell -b '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.1" | bc) -eq 1 ]' '\
  bind m set -g mouse\; display-message "mouse is #{?mouse,on,off}"       \
  set -g mouse-select-pane on;                                            \
  set -g mouse-resize-pane on;                                           '

if-shell -b '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.9" | bc) -eq 1 ]' '\
  set -g mouse-select-window on;                                        '

# good color support 
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# size window based on client looking at window
setw -g aggressive-resize on

# start window numbers at 1 to match keyboard order with tmux order
set -g base-index 1

# start pane numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# don't wait for escape sequences
set -sg escape-time 0

# display pane numbers for longer
set -g display-panes-time 2000

# increase scrollback lines
set -g history-limit 65536

# split current window horizontally
bind - split-window -v
unbind '"'
# split current window vertically
bind | split-window -h
unbind %

# DISPLAY ##################################################
setw -g monitor-activity on # monitor windows for activity

# status
set -g status on
set -g status-position bottom
set -g status-justify left

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' "  \
  set -g status-attr none                                     \
  set -g status-left-attr none                                \
  set -g status-right-attr none"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' "   \
  set -g status-style attr=none,left-attr=none,right-attr=none"

set -g status-left-length 100
set -g status-right-length 100

# window
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' "  \
  setw -g window-status-attr none                             \
  setw -g window-status-activity-attr none"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' " \
  setw -g window-status-style attr=none                       \
  setw -g window-status-activity-style attr=none"

setw -g window-status-separator ""

# colors
run-shell ~/.tmux-onedark.tmux
############################################################

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'
